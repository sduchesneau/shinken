# Here are some sample commands for checking classics things like
# systems and websites

# -----------------------------------------------------------------
#
#      Localhost checks
#
# -----------------------------------------------------------------


# Simple disk check for LOCALHOST ONLY!
define command {
       command_name     check_local_disks
       command_line	$PLUGINSDIR$/check_disk -w 10% -c 5% -x /dev/shm -e -l
}


define command {
       command_name     check_local_load
       command_line	$PLUGINSDIR$/check_load -w 3,3,3 -c 5,5,5
}

define command {
       command_name     check_local_mem
       command_line     $PLUGINSDIR$/check_mem.pl -w 90 -c 95 -v
}


define command {
       command_name     check_local_swap
       command_line     $PLUGINSDIR$/check_swap -w 50% -c 25%
}

define command {
       command_name     check_local_cpu
       command_line     $PLUGINSDIR$/check_cpu -w 80 -c 90
}


# -----------------------------------------------------------------
#
#      Linux standard check
#
# -----------------------------------------------------------------

# 
define command {
       command_name     check_linux_load
       command_line	$PLUGINSDIR$/check_by_ssh -H $HOSTADDRESS$ -C "$PLUGINSDIR$/check_load -w 3,3,3 -c 5,5,5"
}

define command {
       command_name     check_linux_disks
       command_line	$PLUGINSDIR$/check_by_ssh -H $HOSTADDRESS$ -C "$PLUGINSDIR$/check_disk -w 10% -c 5% -x /dev/shm -e -l"
}



# -----------------------------------------------------------------                                                                                                                                             
#                                                                                                                                                                                                               
#      VMware standard check                                                                                                                                                                                    
#                                                                                                                                                                                                               
# -----------------------------------------------------------------                                                                                                                                             



## Generic calls
##ARG1 and take cpu, io, net or mem
define command{
       command_name     check_esx_host
       command_line     $PLUGINSDIR$/check_esx3.pl -D $VCENTER$ -H $HOSTADDRESS$ -u $VCENTERLOGIN$ -p $VCENTERPASSWORD$ -l $ARG1$
}

define command{
        command_name    check_esx_vm
        command_line    $PLUGINSDIR$/check_esx3.pl -D $VCENTER$ -N $HOSTALIAS$ -u $VCENTERLOGIN$ -p $VCENTERPASSWORD$ -l $ARG1$
}


define command{
       command_name     check_esx_host_cpu
       command_line     $PLUGINSDIR$/check_esx3.pl -D $VCENTER$ -H $HOSTADDRESS$ -u $VCENTERLOGIN$ -p $VCENTERPASSWORD$ -l cpu
}

define command{
       command_name     check_esx_host_io
       command_line     $PLUGINSDIR$/check_esx3.pl -D $VCENTER$ -H $HOSTADDRESS$ -u $VCENTERLOGIN$ -p $VCENTERPASSWORD$ -l io
}

define command{
       command_name     check_esx_host_net
       command_line     $PLUGINSDIR$/check_esx3.pl -D $VCENTER$ -H $HOSTADDRESS$ -u $VCENTERLOGIN$ -p $VCENTERPASSWORD$ -l net
}


define command{
       command_name     check_esx_host_mem
       command_line     $PLUGINSDIR$/check_esx3.pl -D $VCENTER$ -H $HOSTADDRESS$ -u $VCENTERLOGIN$ -p $VCENTERPASSWORD$ -l mem
}


# Now for the VMs
define command{
        command_name    check_esx_vm_cpu
        command_line    $PLUGINSDIR$/check_esx3.pl -D $VCENTER$ -N $HOSTALIAS$ -u $VCENTERLOGIN$ -p $VCENTERPASSWORD$ -l cpu
}

define command{
        command_name    check_esx_vm_io
        command_line    $PLUGINSDIR$/check_esx3.pl -D $VCENTER$ -N $HOSTALIAS$ -u $VCENTERLOGIN$ -p $VCENTERPASSWORD$ -l io
}

define command{
        command_name    check_esx_vm_net
        command_line    $PLUGINSDIR$/check_esx3.pl -D $VCENTER$ -N $HOSTALIAS$ -u $VCENTERLOGIN$ -p $VCENTERPASSWORD$ -l net
}

define command{
        command_name    check_esx_vm_mem
        command_line    $PLUGINSDIR$/check_esx3.pl -D $VCENTER$ -N $HOSTALIAS$ -u $VCENTERLOGIN$ -p $VCENTERPASSWORD$ -l mem
}






# -----------------------------------------------------------------
#
#      Classic network calls
#
# -----------------------------------------------------------------

# Simple tcp check
define command {
       command_name	check_tcp
       command_line	$PLUGINSDIR$/check_tcp  -H $HOSTADDRESS$ -p $ARG1$
}

# Simple web check
define command {
       command_name	check_http
       command_line	$PLUGINSDIR$/check_http -H $HOSTADDRESS$
}

# And with SSL
define command {
       command_name     check_https
       command_line     $PLUGINSDIR$/check_http -H $HOSTADDRESS$ -S
}


# Check a DNS server
define command {
       command_name     check_dns
       command_line     $PLUGINSDIR$/check_dns -H $HOSTADDRESS$
}


# Check a DNS entry
define command {
       command_name	check_dig
       command_line 	$PLUGINSDIR$/check_dig -H $HOSTADDRESS$ -l $ARG1$
}

# Check a FTP service
define command {
       command_name	check_ftp
       command_line	$PLUGINSDIR$/check_ftp -H $HOSTADDRESS$
}


# Ask a nrpe agent
define command {
       command_name	check_nrpe
       command_line	$PLUGINSDIR$/check_nrpe -H $HOSTADDRESS$ -t 9 -u -c $ARG1$
}

# Same but with arguments
define command {
       command_name	check_nrpe_args
       command_line	$PLUGINSDIR$/check_nrpe -H $HOSTADDRESS$ -t 9 -u -c $ARG1$ -a $ARG2$ $ARG3$ $ARG4$ $ARG5$
}

# Simple ping command
define command {
       command_name	check_ping
       command_line	$PLUGINSDIR$/check_ping -H $HOSTADDRESS$ -w 3000,100% -c 5000,100% -p 1
}

# Look at good ssh launch
define command {
       command_name	check_ssh
       command_line	$PLUGINSDIR$/check_ssh -H $HOSTADDRESS$
}

# Look for good smtp connection
define command {
       command_name	check_smtp
       command_line	$PLUGINSDIR$/check_smtp -H $HOSTADDRESS$
}

# And SMTPS too
define command {
       command_name	check_smtps
       command_line	$PLUGINSDIR$/check_smtp -H $HOSTADDRESS$ -S
}

# Look at a SSL certificate
define command {
       command_name	check_https_certificate
       command_line	$PLUGINSDIR$/check_http -H $HOSTADDRESS$ -C 30
}

#Look at an HP printer state
define command{
       command_name     check_hpjd
       command_line     $PLUGINSDIR$/check_hpjd -H $HOSTADDRESS$ -C $SNMPCOMMUNITYREAD$
}


# Look at Oracle connection
define command {
       command_name	check_oracle_listener
       command_line	$PLUGINSDIR$/check_oracle --tns $HOSTADDRESS$
}

# Look at a Dhcp server
# Beware : the check_dhcp should be SETUID (chmod u+s /usr/lib/nagios/plugins/check_dhcp)
define command {
       command_name	check_dhcp
       command_line	$PLUGINSDIR$/check_dhcp -s $HOSTADDRESS$
}


# Ldap query
# Don't forget to update the macros in the resources.cfg file
define command {
       command_name	check_ldap
       command_line	$PLUGINSDIR$/check_ldap -H $HOSTADDRESS$ -b "$LDAPBASE$" -D $DOMAINUSER$ -P "$DOMAINPASSWORD$"
}

# Now the same, but in LDAPS
# Don't forget to update the macros in the resources.cfg
define command {
       command_name     check_ldaps
       command_line     $PLUGINSDIR$/check_ldaps -H $HOSTADDRESS$ -b "$LDAPBASE$" -D $DOMAINUSER$ -P "$DOMAINPASSWORD$"
}


# Asterisk (SIP) check. available at : http://www.bashton.com/downloads/nagios-check_sip-1.2.tar.gz
define command {
       command_name     check_sip
       command_line     $PLUGINSDIR$/check_sip -H $HOSTADDRESS$ -u sip:$SIPUSER$
}


# -----------------------------------------------------------------
#
#      Mysql calls. It use the check_mysql_health from
#      http://labs.consol.de/lang/en/nagios/check_mysql_health/
#
# -----------------------------------------------------------------


# Distant mysql check
define command {
       command_name	check_mysql_connection
       command_line	$PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode connection-time
}

define command {
       command_name     check_mysql_querycache_hitrate
       command_line	$PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode querycache-hitrate
}

define command {
       command_name     check_mysql_uptime
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode uptime
}

define command {
       command_name     check_mysql_threads_connected
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode threads-connected
}

define command {
       command_name     check_mysql_qcache_lowmem_prunes
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode qcache-lowmem-prunes
}

define command {
       command_name     check_mysql_keycache_hitrate
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode keycache-hitrate
}

define command {
       command_name     check_mysql_bufferpool_hitrate
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode bufferpool-hitrate
}

define command {
       command_name     check_mysql_bufferpool_wait_free
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode bufferpool-wait-free
}

define command {
       command_name     check_mysql_log_waits
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode log-waits
}

define command {
       command_name     check_mysql_tablecache_hitrate
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode tablecache-hitrate
}

define command {
       command_name     check_mysql_table_lock_contention
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode table-lock-contention
}

define command {
       command_name     check_mysql_index_usage
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode index-usage
}

define command {
       command_name     check_mysql_tmp_disk_tables
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode tmp-disk-tables
}

define command {
       command_name     check_mysql_slow_queries
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode slow-queries
}

define command {
       command_name     check_mysql_long_running_procs
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode long-running-procs
}

define command {
       command_name     check_mysql_slave_lag
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode slave-lag
}

define command {
       command_name     check_mysql_slave_io_running
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode slave-io-running
}

define command {
       command_name     check_mysql_slave_sql_running
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode slave-sql-running
}

define command {
       command_name     check_mysql_open_files
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode open-files
}

define command {
       command_name     check_mysql_cluster_ndb_running
       command_line     $PLUGINSDIR$/check_mysql_health --hostname $HOSTADDRESS$ --username $MYSQLUSER$ --password $MYSQLPASSWORD$ --mode cluster-ndb-running
}



# -----------------------------------------------------------------
#
#      Mssql calls. It use the check_mssql_health from
#      http://labs.consol.de/lang/en/nagios/check_mssql_health/
#
# -----------------------------------------------------------------


# Look at http://labs.consol.de/nagios/check_mssql_health/ to get it
# Don't forget to change $MSSQLUSER$ and $MSSQLPASSWORD$ in resources.cfg before you use this ;)
define command {
       command_name	check_mssql_connection
       command_line	$PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode connection-time
}

define command {
       command_name     check_mssql_connected_users
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode connected-users
}

define command {
       command_name     check_mssql_cpu_busy
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode cpu-busy
}

define command {
       command_name     check_mssql_io_busy
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode io-busy
}

define command {
       command_name     check_mssql_full_scans
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode full-scans
}

define command {
       command_name     check_mssql_transactions
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode transactions
}

define command {
       command_name     check_mssql_batch_requests
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode batch-requests
}

define command {
       command_name     check_mssql_latches_waits
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode latches-waits
}

define command {
       command_name     check_mssql_latches_wait_time
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode latches-wait-time
}

define command {
       command_name     check_mssql_locks_waits
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode locks-waits
}

define command {
       command_name     check_mssql_locks_timeouts
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode locks-timeouts
}

define command {
       command_name     check_mssql_locks_deadlocks
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode locks-deadlocks
}

define command {
       command_name     check_mssql_sql_recompilations
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode sql-recompilations
}

define command {
       command_name     check_mssql_sql_initcompilations
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode sql-initcompilations
}

define command {
       command_name     check_mssql_total_server_memory
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode total-server-memory
}

define command {
       command_name     check_mssql_mem_pool_data_buffer_hit_ratio
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode mem-pool-data-buffer-hit-ratio
}

define command {
       command_name     check_mssql_lazy_writes
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode lazy-writes
}

define command {
       command_name     check_mssql_page_life_expectancy
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode page-life-expectancy
}

define command {
       command_name     check_mssql_free_list_stalls
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode free-list-stalls
}

define command {
       command_name     check_mssql_checkpoint_pages
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode checkpoint-pages
}

define command {
       command_name     check_mssql_database_free
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode database-free
}

define command {
       command_name     check_mssql_database_backup_age
       command_line     $PLUGINSDIR$/check_mssql_health --hostname $HOSTADDRESS$ --username "$MSSQLUSER$" --password "$MSSQLPASSWORD$" --mode database-backup-age
}





# -----------------------------------------------------------------
#
#      Oracle calls. It use the check_oracle_health from
#      http://labs.consol.de/lang/en/nagios/check_oracle_health/
#
# -----------------------------------------------------------------


# Don't forget to change $MSSQLUSER$ and $MSSQLPASSWORD$ in resources.cfg before you use this ;)
define command {
       command_name	check_oracle_tnsping
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode tnsping
}

define command {
       command_name	check_oracle_connection_time
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode connection-time
}

define command {
       command_name	check_oracle_connected_users
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode connected-users
}

define command {
       command_name	check_oracle_session_usage
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode session-usage
}

define command {
       command_name	check_oracle_process_usage
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode process-usage
}

define command {
       command_name	check_oracle_rman_backup_problems
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode rman-backup-problems
}

define command {
       command_name	check_oracle_sga_data_buffer_hit_ratio
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode sga-data-buffer-hit-ratio
}

define command {
       command_name	check_oracle_sga_library_cache_gethit_ratio
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode sga-library-cache-gethit-ratio
}

define command {
       command_name	check_oracle_sga_library_cache_pinhit_ratio
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode sga-library-cache-pinhit-ratio
}

define command {
       command_name	check_oracle_sga_library_cache_reloads
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode sga-library-cache-reloads
}

define command {
       command_name	check_oracle_sga_dictionary_cache_hit_ratio
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode sga-dictionary-cache-hit-ratio
}

define command {
       command_name	check_oracle_sga_latches_hit_ratio
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode sga-latches-hit-ratio
}

define command {
       command_name	check_oracle_sga_shared_pool_reloads
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode sga-shared-pool-reloads
}

define command {
       command_name	check_oracle_sga_shared_pool_free
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode sga-shared-pool-free
}

define command {
       command_name	check_oracle_pga_in_memory_sort_ratio
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode pga-in-memory-sort-ratio
}

define command {
       command_name	check_oracle_invalid_objects
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode invalid-objects
}

define command {
       command_name	check_oracle_stale_statistics
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode stale-statistics
}

define command {
       command_name	check_oracle_tablespace_usage
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode tablespace-usage
}

define command {
       command_name	check_oracle_tablespace_free
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode tablespace-free
}

define command {
       command_name	check_oracle_tablespace_fragmentation
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode tablespace-fragmentation
}

define command {
       command_name	check_oracle_tablespace_io_balanc
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode tablespace-io-balanc
}

define command {
       command_name	check_oracle_tablespace_remaining_time
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode tablespace-remaining-time
}

define command {
       command_name	check_oracle_tablespace_can_allocate_next
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode tablespace-can-allocate-next
}

define command {
       command_name	check_oracle_flash_recovery_area_usage
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode flash-recovery-area-usage
}

define command {
       command_name	check_oracle_flash_recovery_area_free
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode flash-recovery-area-free
}

define command {
       command_name	check_oracle_datafile_io_traffic
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode datafile-io-traffic
}

define command {
       command_name	check_oracle_datafiles_existing
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode datafiles-existing
}

define command {
       command_name	check_oracle_soft_parse_ratio
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode soft-parse-ratio
}

define command {
       command_name	check_oracle_switch_interval
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode switch-interval
}

define command {
       command_name	check_oracle_retry_ratio
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode retry-ratio
}

define command {
       command_name	check_oracle_redo_io_traffic
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode redo-io-traffic
}

define command {
       command_name	check_oracle_roll_header_contention
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode roll-header-contention
}

define command {
       command_name	check_oracle_roll_block_contention
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode roll-block-contention
}

define command {
       command_name	check_oracle_roll_hit_ratio
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode roll-hit-ratio
}

define command {
       command_name	check_oracle_roll_extends
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode roll-extends
}

define command {
       command_name	check_oracle_roll_wraps
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode roll-wraps
}

define command {
       command_name	check_oracle_seg_top10_logical_reads
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode seg-top10-logical-reads
}

define command {
       command_name	check_oracle_seg_top10_physical_reads
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode seg-top10-physical-reads
}

define command {
       command_name	check_oracle_seg_top10_buffer_busy_waits
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode seg-top10-buffer-busy-waits
}

define command {
       command_name	check_oracle_seg_top10_row_lock_waits
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode seg-top10-row-lock-waits
}

define command {
       command_name	check_oracle_event_waits
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode event-waits
}

define command {
       command_name	check_oracle_event_waiting
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode event-waiting
}

define command {
       command_name	check_oracle_enqueue_contention
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode enqueue-contention
}

define command {
       command_name	check_oracle_enqueue_waiting
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode enqueue-waiting
}

define command {
       command_name	check_oracle_latch_contention
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode latch-contention
}

define command {
       command_name	check_oracle_latch_waiting
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode latch-waiting
}

define command {
       command_name	check_oracle_sysstat
       command_line	$PLUGINSDIR$/check_oracle_health --connect "$ARG1$" --user "$ORACLEUSER$" --password "$ORACLEPASSWORD$" --mode sysstat
}









#### Then samples which are not really useful in the real world

#Pollertag is a advanced features for mix architectures. Look at the doc for it.
define command{
	command_name	check_linux_host_alive
	command_line	$USER1$/check_tcp -H $HOSTADDRESS$ -p 22 -t 3
	#poller_tag	DMZ
	#module_type	nrpe_poller
}

#Pollertag is a advanced features for mix architectures. Look at the doc for it.
define command{
        command_name    check_host_alive
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 1,50% -c 2,70% -p 1
        #poller_tag     DMZ
	#module_type	nrpe_poller
}


define command{
        command_name    check_windows_host_alive
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 139 -t 3
        #poller_tag     DMZ
	#module_type	nrpe_poller
}


define command{
	command_name	check_local_disk
	command_line	$USER1$/check.sh $HOSTADDRESS$ -c $ARG1$ SERVICE $USER1$
	#poller_tag	DMZ
	#module_type	nrpe_poller
}


# Dummy check port command
define command{
       command_name	check_port
       command_line	/bin/ping localhost -c 1
 #$USER1$/check.sh $HOSTADDRESS$ -c $ARG1$
       #poller_tag	DMZ
       #module_type	nrpe_poller
}

# Dummy check for mysql, always CRITICAL
define command{
       command_name     check_mysql
       command_line     $USER1$/check_dummy.sh 2
}


define command{
        command_name    check_dummy
        command_line    $USER1$/check_dummy.sh $ARG1$
	#poller_tag	DMZ
}

define command{
       command_name	check_utf8
       command_line    $USER1$/check_utf8.sh
}

define command{
	command_name	super_event_kill_everyone
	command_line	$USER1$/check.sh $HOSTADDRESS$ -c $ARG1$ SERVICE $_HOSTDELLSUCK$
}


# We say Http checks are always OK
define command{
	command_name	check_http2
	command_line	$USER1$/check_dummy.sh 1
	#module_type	nrpe_poller
}

define command{
	command_name	check-host-alive
	command_line	$USER1$/check.sh $HOSTADDRESS$ -c $ARG1$ HOST $_HOSTDELLSUCK$ $SERVICEDESC:srv-1:Service-2$ $SERVICEDESC::Service-30$ $HOSTADDRESS:$  $HOSTGROUPALIAS:linux-servers$
	#module_type	dummy_poller
}


define command{
       command_name	check_vm_cpu
       command_line	$USER1$/check_esx3.pl -H lulu
}


#### Now notification commands
define command{
        command_name                    notify-host-by-email
        command_line                    /usr/bin/printf "%b" "Shinken Notification\n\nType:$NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\nDate/Time: $DATE$\n" | /usr/bin/mail -s "Host $HOSTSTATE$ alert for $HOSTNAME$!" $CONTACTEMAIL$
}


define command{
        command_name                    notify-service-by-email
        command_line                    /usr/bin/printf "%b" "Shinken Notification\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $DATE$ Additional Info : $SERVICEOUTPUT$\n" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ alert - $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
}


# For Android SMS things
# You need both reactionner_tag and module_type in most cases!
define command{
       command_name                    notify-host-by-android-sms
       command_line                    android_sms  $CONTACTPAGER$ Host: $HOSTNAME$\nAddress: $HOSTADDRESS$\nState: $HOSTSTATE$\nInfo: $OUTPUT$\nDate: $DATETIME$
       reactionner_tag		       android_sms
       module_type		       android_sms
}

define command{
       command_name                    notify-service-by-android-sms
       command_line                    android_sms  $CONTACTPAGER$ Service: $SERVICEDESC$\nHost: $HOSTNAME$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\nInfo: $OUTPUT$\nDate: $DATETIME$
       reactionner_tag		       android_sms
       module_type		       android_sms
}



#### And Discovery commands
define command{
        command_name        nmap_discovery
        command_line        $USER1$/nmap_discovery_runner.py -t $NMAPTARGETS$
}

define command{
        command_name        vmware_esx_discovery
        command_line        $USER1$/vmware_discovery_runner.py -V $VCENTER$ -u $VCENTERLOGIN$ -p $VCENTERPASSWORD$ -r "lower|nofqdn"
}

